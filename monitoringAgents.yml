---

- hosts: monitored
  
  roles:
    - role: cloudalchemy.node_exporter
      become: true
      
    - role: sco.promtail
      become: true
      vars:
        loki_host: "206-12-92-26.cloud.computecanada.ca"
      when: ansible_nodename == 'grafana' or ansible_nodename == 'omero-backup'      
     

        
  tasks:
      - name: set fact
        set_fact:
          omero_node: "{{ 'true' if ((ansible_nodename == 'omero') or (ansible_nodename == 'national-omero') or (ansible_nodename == 'omero-dev')) else 'false' }}"
        
      - name: Create monitoring htpasswd
        become: yes
        copy:
          content: "{{ secret_monitoring_nginx_htpasswd | default(monitoring_nginx_htpasswd) }}"
          dest: /etc/nginx/monitoring.htpasswd
          mode: 0644
        when: omero_node 

      # This is fine to apply to all servers because if an exporter doesn't
      # exist it will return an error, and we know which exporters to expect
      # when scraping
      - name: Create nginx proxy for prometheus exporters
        become: yes
        copy:
          dest: /etc/nginx/conf.d-nested-includes/proxy-exporters.conf
          src: confd-nested-proxy-exporters.conf
          mode: 0644
        when: omero_node   
        notify:
        - restart nginx

  handlers:
    - name: restart nginx
      become: yes
      service:
        name: nginx
        state: restarted

  vars:
      # monitoring:monitoring
    monitoring_nginx_htpasswd: |
      monitoring:$apr1$njrafrtU$19wf/I15zPuSudlM5Y50Z0
      
      

- hosts: omero_server
  roles:
    - role: ome.prometheus_jmx

    - role: sco.promtail
      become: true
      vars:
        loki_host: "206-12-92-26.cloud.computecanada.ca"
        promtail_config_file: templates/promtail-omero.yml.j2
        
    # For restart handlers
    # and {{omero_common_basedir}} (normally /opt/omero)
    - role: ome.omero_common
    
    #sco.omero_prometheues_exporter works with Ubuntu20
    - role: sco.omero_prometheus_exporter
      vars:
        omero_prometheus_exporter_omero_user: omero-monitoring
        omero_prometheus_exporter_omero_password: omero-monitoring
        
                     
  tasks:
    - name: update nginx.conf log file format for loki dashboard
      become: true
      replace:
        path: /etc/nginx/nginx.conf
        regexp: 'access_log .+'
        replace: |
          log_format json_analytics escape=json '{'
                            '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                            '"connection": "$connection", ' # connection serial number
                            '"connection_requests": "$connection_requests", ' # number of requests made in connection
                    '"pid": "$pid", ' # process pid
                    '"request_id": "$request_id", ' # the unique request id
                    '"request_length": "$request_length", ' # request length (including headers and body)
                    '"remote_addr": "$remote_addr", ' # client IP
                    '"remote_user": "$remote_user", ' # client HTTP username
                    '"remote_port": "$remote_port", ' # client port
                    '"time_local": "$time_local", '
                    '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                    '"request": "$request", ' # full path no arguments if the request
                    '"request_uri": "$request_uri", ' # full path and arguments if the request
                    '"args": "$args", ' # args
                    '"status": "$status", ' # response status code
                    '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                    '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                    '"http_referer": "$http_referer", ' # HTTP referer
                    '"http_user_agent": "$http_user_agent", ' # user agent
                    '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
                    '"http_host": "$http_host", ' # the request Host: header
                    '"server_name": "$server_name", ' # the name of the vhost serving the request
                    '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                    '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                    '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                    '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                    '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                    '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                    '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                    '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                    '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                    '"scheme": "$scheme", ' # http or https
                    '"request_method": "$request_method", ' # request method
                    '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                    '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
                    '"gzip_ratio": "$gzip_ratio", '
                    '"http_cf_ray": "$http_cf_ray"'
                    #'"geoip_country_code": "$geoip_country_code"'
                    '}';

           access_log /var/log/nginx/json_access.log json_analytics;
        
  
    - name: omero-server prometheus jmx agents
      become: yes
      copy:
        dest: "{{ omero_common_basedir }}/server/config/prometheus.omero"
        src: omero-server-config-prometheus.omero
        mode: 0644
      notify:
      - restart omero-server    

- hosts: omero_web
  roles:
    - role: ome.omero_web_django_prometheus
    
  tasks:
  - name: Create nginx proxy for prometheus web exporters
    become: yes
    copy:
      dest: /etc/nginx/conf.d-nested-includes/proxy-exporters-web.conf
      src: confd-nested-proxy-exporters-web.conf
      mode: 0644
    notify:
    - restart nginx

  handlers:
  - name: restart nginx
    become: yes
    service:
      name: nginx
      state: restarted    
    

- hosts: omero_db               
  roles:
    - role: ome.prometheus_postgres
      prometheus_postgres_dbname: omero